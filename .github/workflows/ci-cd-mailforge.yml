name: CI/CD Pipeline

# Указываем события, которые запускают пайплайн
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      # Тестирование бэкенда
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12.2'
      
      # Установка зависимостей для бэкенда
      - name: Install backend dependencies
        run: |
          cd server
          pip install -r requirements.txt
          pip install pytest pytest-cov

      # Запуск тестов бэкенда с проверкой покрытия кода
      - name: Run backend tests
        run: |
          cd server
          pytest tests/ --cov=app

      # Тестирование фронтенда
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      # Установка зависимостей для фронтенда, включая тестовые библиотеки
      - name: Install frontend dependencies
        run: |
          cd client
          npm install
          npm install @vue/cli-plugin-babel @vue/cli-plugin-unit-jest

      # Запуск тестов фронтенда
      - name: Run frontend tests
        run: |
          cd client
          npm run test:unit
        continue-on-error: false

  # Сборка и публикация Docker образов
  build:
    needs: test # Ждём завершения тестов
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      # Сборка Docker образов из docker-compose
      - name: Build Docker images
        run: docker-compose build

      # Авторизация в Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # Отправка собранных образов в Docker Hub
      - name: Push Docker images
        run: |
          docker-compose push
