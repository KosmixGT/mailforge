name: CI/CD Pipeline

# Указываем события, которые запускают пайплайн
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:  
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12.2'
      - name: Install lint dependencies
        run: |
          pip install flake8 black mypy types-requests
        # Запуск линтинга
      - name: Run linting
        run: |
          black server/app services/*/app --check
          flake8 server/app services/*/app
          mypy server/app services/*/app

  test:
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      matrix:
        service: [server, auth, mailing, delivery, history]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12.2'
      - name: Install dependencies
        run: |
          if [ "${{ matrix.service }}" == "server" ]; then
            cd server
          else
            cd services/${{ matrix.service }}
          fi
          pip install -r requirements.txt
          pip install pytest pytest-cov
      - name: Run tests
        run: |
          if [ "${{ matrix.service }}" == "server" ]; then
            cd server
          else
            cd services/${{ matrix.service }}
          fi
          pytest tests/ --cov=app        

      # Тестирование фронтенда
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      # Установка зависимостей для фронтенда, включая тестовые библиотеки
      - name: Install frontend dependencies
        run: |
          cd client
          npm install
          npm install @vue/cli-plugin-babel @vue/cli-plugin-unit-jest

      # Запуск тестов фронтенда
      - name: Run frontend tests
        run: |
          cd client
          npm run test:unit
        continue-on-error: false

  # Сборка и публикация Docker образов
  build:
    needs: test # Ждём завершения тестов
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      # Установка docker-compose
      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.24.7/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      # Сборка Docker образов из docker-compose
      - name: Build Docker images
        run: docker-compose build

      # Авторизация в Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # Отправка собранных образов в Docker Hub
      - name: Push Docker images
        run: |
          docker-compose push
